package vista;

import controlador.ControladorProducto;
import java.awt.Color;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import modelo.Producto;

public class InterActualizarStock extends javax.swing.JInternalFrame {

    private int idProducto;
    private int cantidad;
    Producto producto = new Producto();
    ControladorProducto controladorProducto = new ControladorProducto();

    public InterActualizarStock() {
        initComponents();
        this.setTitle("Actualizar Stock de Productos");
        this.cargarComboProducto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCantidadNueva = new javax.swing.JTextField();
        txtCantidadActual = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jComboBoxProducto = new javax.swing.JComboBox<>();
        botonActualizar = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(221, 240, 254));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(221, 240, 254));
        jLabel1.setFont(new java.awt.Font("Roboto Condensed Medium", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/en-stock (1).png"))); // NOI18N
        jLabel1.setText("Actualizar Stock");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 160, 30));

        txtCantidadNueva.setBackground(new java.awt.Color(221, 240, 254));
        txtCantidadNueva.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        txtCantidadNueva.setForeground(new java.awt.Color(0, 0, 0));
        txtCantidadNueva.setBorder(null);
        txtCantidadNueva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCantidadNuevaMouseEntered(evt);
            }
        });
        jPanel1.add(txtCantidadNueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 220, 30));

        txtCantidadActual.setEditable(false);
        txtCantidadActual.setBackground(new java.awt.Color(221, 240, 254));
        txtCantidadActual.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        txtCantidadActual.setForeground(new java.awt.Color(0, 0, 0));
        txtCantidadActual.setBorder(null);
        txtCantidadActual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtCantidadActualMouseEntered(evt);
            }
        });
        jPanel1.add(txtCantidadActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 220, 30));

        jPanel2.setBackground(new java.awt.Color(221, 240, 254));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(221, 240, 254));
        jLabel3.setFont(new java.awt.Font("Roboto Condensed Medium", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/caja-de-cartonn.png"))); // NOI18N
        jLabel3.setText("Producto: ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 120, 40));

        jLabel2.setBackground(new java.awt.Color(221, 240, 254));
        jLabel2.setFont(new java.awt.Font("Roboto Condensed Medium", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stock.png"))); // NOI18N
        jLabel2.setText("Stock Nuevo: ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 140, 40));

        jLabel4.setBackground(new java.awt.Color(221, 240, 254));
        jLabel4.setFont(new java.awt.Font("Roboto Condensed Medium", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/productocantidadd.png"))); // NOI18N
        jLabel4.setText("Stock Actual: ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 150, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 180, 300));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 220, 10));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 220, 20));

        jComboBoxProducto.setBackground(new java.awt.Color(221, 240, 254));
        jComboBoxProducto.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        jComboBoxProducto.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Producto:", "Item 2", "Item 3", "Item 4" }));
        jComboBoxProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProductoActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 220, 30));

        botonActualizar.setBackground(new java.awt.Color(0, 153, 255));
        botonActualizar.setFont(new java.awt.Font("Roboto Condensed Medium", 0, 18)); // NOI18N
        botonActualizar.setForeground(new java.awt.Color(0, 0, 0));
        botonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizarCategoria.png"))); // NOI18N
        botonActualizar.setText("Actualizar");
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(botonActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 130, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProductoActionPerformed
        this.mostrarStock();
    }//GEN-LAST:event_jComboBoxProductoActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        //validamos si selecciono algun producto
        if (jComboBoxProducto.getSelectedItem().equals("Seleccione Producto:")) {
            JOptionPane.showInternalMessageDialog(null, "Seleccione un producto");
        } else if (txtCantidadNueva.getText().trim().isEmpty()) {//validamos si ingreso una cantidad
            JOptionPane.showMessageDialog(null, "Debe ingresar la cantidad de Productos que desea ingresar al stock ");
            txtCantidadNueva.setBackground(Color.RED);
            txtCantidadNueva.requestFocus();
            return;
        } else {
            try {
                var cantidad = Integer.parseInt(txtCantidadNueva.getText().trim());
                if (cantidad < 0) {
                    JOptionPane.showInternalMessageDialog(null, "La cantidad no puede ser menor a ¡¡¡CERO!!! (0)");
                    txtCantidadNueva.setBackground(Color.RED);
                    txtCantidadNueva.requestFocus();
                    return;
                } else {

                    var cantidadActual = Integer.parseInt(txtCantidadActual.getText().trim());
                    var cantidadNueva = Integer.parseInt(txtCantidadNueva.getText().trim());
                    cantidadNueva = cantidadActual + cantidadNueva;
                    producto.setCantidad(cantidadNueva);
                    controladorProducto.actualizarStock(producto, idProducto);
                    JOptionPane.showMessageDialog(null, "Stock Actualizado");
                    this.limpiar();
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "la cantidad debe ser un número entero ¡¡¡SIN COMAS Y PUNTOS!!!");
                txtCantidadNueva.setBackground(Color.RED);
                txtCantidadNueva.requestFocus();
                return;
            }
        }
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void txtCantidadActualMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCantidadActualMouseEntered
       txtCantidadActual.setBackground(new Color(221, 240, 254));
    }//GEN-LAST:event_txtCantidadActualMouseEntered

    private void txtCantidadNuevaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCantidadNuevaMouseEntered
        txtCantidadNueva.setBackground(new Color(221, 240, 254));
    }//GEN-LAST:event_txtCantidadNuevaMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JComboBox<String> jComboBoxProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField txtCantidadActual;
    private javax.swing.JTextField txtCantidadNueva;
    // End of variables declaration//GEN-END:variables

    //metodo para cargar el combobox producto
    private void cargarComboProducto() {
        Connection con = conexion.Conexion.conectar();
        String sql = "SELECT * FROM tb_Producto;";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBoxProducto.removeAllItems();
            jComboBoxProducto.addItem("Seleccione Producto:");
            while (rs.next()) {
                jComboBoxProducto.addItem(rs.getString("nombre"));
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias " + e.getMessage());
        }

    }

    //metodo para mostrar la cantidad del stock del producto 
    private void mostrarStock() {
        try {
            Connection con = conexion.Conexion.conectar();
            String sql = "Select * from tb_producto where nombre='" + jComboBoxProducto.getSelectedItem() + "';";
            Statement st;
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                idProducto = rs.getInt("idProducto");
                cantidad = rs.getInt("cantidad");
                txtCantidadActual.setText(String.valueOf(cantidad));
            } else {
                txtCantidadActual.setText("");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener el stock del producto:  " + e);
        }

    }
    private void limpiar(){
        this.jComboBoxProducto.setSelectedItem("Seleccione Producto:");
        this.txtCantidadActual.setText("");
        this.txtCantidadNueva.setText("");
    }
            

}
